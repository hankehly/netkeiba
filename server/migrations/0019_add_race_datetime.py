# Generated by Django 2.1.4 on 2019-01-13 02:42
import logging
import re

from django.db import migrations

from crawler.parsers.race import RaceParser

logger = logging.getLogger(__name__)


def is_race_url(url) -> bool:
    return re.search('/race/[0-9]+/', url) is not None


def fill_race_datetime(apps, schema_editor):
    WebPage = apps.get_model('server', 'WebPage')
    Race = apps.get_model('server', 'Race')
    webpage_count = WebPage.objects.count()
    logger.info(f'total number of webpages: {webpage_count}')
    i = 0
    for page in WebPage.objects.iterator():
        if is_race_url(page.url):
            parser = RaceParser(page.html)
            parser.parse()
            race_key = parser.data.get('key')
            race = Race.objects.get(key=race_key)
            race_datetime = parser.data.get('datetime')
            race.datetime = race_datetime
            race.save(update_fields=['datetime'])
            logger.info(f'({i}/{webpage_count}) race {race_key} datetime set to {race_datetime}')
        else:
            logger.info(f'({i}/{webpage_count}) skipped ({page.url} is not a race url)')
        i += 1


class Migration(migrations.Migration):
    dependencies = [
        ('server', '0018_auto_20190113_0241'),
    ]

    operations = [
        migrations.RunPython(fill_race_datetime, migrations.RunPython.noop)
    ]
